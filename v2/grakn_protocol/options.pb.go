//
// Copyright (C) 2020 Grakn Labs
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: protobuf/options.proto

package grakn_protocol

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to InferOpt:
	//	*Options_Infer
	InferOpt isOptions_InferOpt `protobuf_oneof:"infer_opt"`
	// Types that are assignable to ExplainOpt:
	//	*Options_Explain
	ExplainOpt isOptions_ExplainOpt `protobuf_oneof:"explain_opt"`
	// Types that are assignable to BatchSizeOpt:
	//	*Options_BatchSize
	BatchSizeOpt isOptions_BatchSizeOpt `protobuf_oneof:"batch_size_opt"`
}

func (x *Options) Reset() {
	*x = Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_v2_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options) ProtoMessage() {}

func (x *Options) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_v2_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options.ProtoReflect.Descriptor instead.
func (*Options) Descriptor() ([]byte, []int) {
	return file_protobuf_v2_options_proto_rawDescGZIP(), []int{0}
}

func (m *Options) GetInferOpt() isOptions_InferOpt {
	if m != nil {
		return m.InferOpt
	}
	return nil
}

func (x *Options) GetInfer() bool {
	if x, ok := x.GetInferOpt().(*Options_Infer); ok {
		return x.Infer
	}
	return false
}

func (m *Options) GetExplainOpt() isOptions_ExplainOpt {
	if m != nil {
		return m.ExplainOpt
	}
	return nil
}

func (x *Options) GetExplain() bool {
	if x, ok := x.GetExplainOpt().(*Options_Explain); ok {
		return x.Explain
	}
	return false
}

func (m *Options) GetBatchSizeOpt() isOptions_BatchSizeOpt {
	if m != nil {
		return m.BatchSizeOpt
	}
	return nil
}

func (x *Options) GetBatchSize() int32 {
	if x, ok := x.GetBatchSizeOpt().(*Options_BatchSize); ok {
		return x.BatchSize
	}
	return 0
}

type isOptions_InferOpt interface {
	isOptions_InferOpt()
}

type Options_Infer struct {
	Infer bool `protobuf:"varint,1,opt,name=infer,proto3,oneof"`
}

func (*Options_Infer) isOptions_InferOpt() {}

type isOptions_ExplainOpt interface {
	isOptions_ExplainOpt()
}

type Options_Explain struct {
	Explain bool `protobuf:"varint,2,opt,name=explain,proto3,oneof"`
}

func (*Options_Explain) isOptions_ExplainOpt() {}

type isOptions_BatchSizeOpt interface {
	isOptions_BatchSizeOpt()
}

type Options_BatchSize struct {
	BatchSize int32 `protobuf:"varint,3,opt,name=batch_size,json=batchSize,proto3,oneof"`
}

func (*Options_BatchSize) isOptions_BatchSizeOpt() {}

var File_protobuf_v2_options_proto protoreflect.FileDescriptor

var file_protobuf_v2_options_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5f, 0x76, 0x32, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x67, 0x72, 0x61,
	0x6b, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x8c, 0x01, 0x0a, 0x07,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x01, 0x52, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0a, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x02, 0x52, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x0b, 0x0a, 0x09,
	0x69, 0x6e, 0x66, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x42, 0x45, 0x0a, 0x0e, 0x67, 0x72,
	0x61, 0x6b, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x42, 0x0c, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x25, 0x2e, 0x2f, 0x67, 0x72,
	0x61, 0x6b, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76, 0x32, 0x3b,
	0x67, 0x72, 0x61, 0x6b, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76,
	0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_v2_options_proto_rawDescOnce sync.Once
	file_protobuf_v2_options_proto_rawDescData = file_protobuf_v2_options_proto_rawDesc
)

func file_protobuf_v2_options_proto_rawDescGZIP() []byte {
	file_protobuf_v2_options_proto_rawDescOnce.Do(func() {
		file_protobuf_v2_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_v2_options_proto_rawDescData)
	})
	return file_protobuf_v2_options_proto_rawDescData
}

var file_protobuf_v2_options_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_protobuf_v2_options_proto_goTypes = []interface{}{
	(*Options)(nil), // 0: grakn.protocol.Options
}
var file_protobuf_v2_options_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protobuf_v2_options_proto_init() }
func file_protobuf_v2_options_proto_init() {
	if File_protobuf_v2_options_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_v2_options_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protobuf_v2_options_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Options_Infer)(nil),
		(*Options_Explain)(nil),
		(*Options_BatchSize)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_v2_options_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_v2_options_proto_goTypes,
		DependencyIndexes: file_protobuf_v2_options_proto_depIdxs,
		MessageInfos:      file_protobuf_v2_options_proto_msgTypes,
	}.Build()
	File_protobuf_v2_options_proto = out.File
	file_protobuf_v2_options_proto_rawDesc = nil
	file_protobuf_v2_options_proto_goTypes = nil
	file_protobuf_v2_options_proto_depIdxs = nil
}
