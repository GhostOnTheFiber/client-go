//
// Copyright (C) 2021 Grakn Labs
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: v2/protobuf/cluster/grakn_cluster.proto

package grakn_protocol_cluster

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_v2_protobuf_cluster_grakn_cluster_proto protoreflect.FileDescriptor

var file_v2_protobuf_cluster_grakn_cluster_proto_rawDesc = []byte{
	0x0a, 0x27, 0x76, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x67, 0x72, 0x61, 0x6b, 0x6e, 0x5f, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x67, 0x72, 0x61, 0x6b, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x1a, 0x21, 0x76, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x76, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xc3, 0x02, 0x0a, 0x0c, 0x47, 0x72, 0x61,
	0x6b, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x6b, 0x0a, 0x0f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x2b, 0x2e, 0x67,
	0x72, 0x61, 0x6b, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x67, 0x72, 0x61, 0x6b,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x12, 0x62, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x67, 0x65, 0x74, 0x12, 0x28, 0x2e, 0x67, 0x72, 0x61, 0x6b, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x71,
	0x1a, 0x28, 0x2e, 0x67, 0x72, 0x61, 0x6b, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x12, 0x62, 0x0a, 0x0c, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x12, 0x28, 0x2e, 0x67, 0x72, 0x61,
	0x6b, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x41, 0x6c, 0x6c,
	0x2e, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x67, 0x72, 0x61, 0x6b, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x42, 0x5f,
	0x0a, 0x16, 0x67, 0x72, 0x61, 0x6b, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x42, 0x11, 0x47, 0x72, 0x61, 0x6b, 0x6e, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x32, 0x2e, 0x2f, 0x76,
	0x32, 0x2f, 0x67, 0x72, 0x61, 0x6b, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x3b, 0x67, 0x72, 0x61, 0x6b, 0x6e, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_v2_protobuf_cluster_grakn_cluster_proto_goTypes = []interface{}{
	(*Cluster_Servers_Req)(nil), // 0: grakn.protocol.cluster.Cluster.Servers.Req
	(*Database_Get_Req)(nil),    // 1: grakn.protocol.cluster.Database.Get.Req
	(*Database_All_Req)(nil),    // 2: grakn.protocol.cluster.Database.All.Req
	(*Cluster_Servers_Res)(nil), // 3: grakn.protocol.cluster.Cluster.Servers.Res
	(*Database_Get_Res)(nil),    // 4: grakn.protocol.cluster.Database.Get.Res
	(*Database_All_Res)(nil),    // 5: grakn.protocol.cluster.Database.All.Res
}
var file_v2_protobuf_cluster_grakn_cluster_proto_depIdxs = []int32{
	0, // 0: grakn.protocol.cluster.GraknCluster.cluster_servers:input_type -> grakn.protocol.cluster.Cluster.Servers.Req
	1, // 1: grakn.protocol.cluster.GraknCluster.database_get:input_type -> grakn.protocol.cluster.Database.Get.Req
	2, // 2: grakn.protocol.cluster.GraknCluster.database_all:input_type -> grakn.protocol.cluster.Database.All.Req
	3, // 3: grakn.protocol.cluster.GraknCluster.cluster_servers:output_type -> grakn.protocol.cluster.Cluster.Servers.Res
	4, // 4: grakn.protocol.cluster.GraknCluster.database_get:output_type -> grakn.protocol.cluster.Database.Get.Res
	5, // 5: grakn.protocol.cluster.GraknCluster.database_all:output_type -> grakn.protocol.cluster.Database.All.Res
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_v2_protobuf_cluster_grakn_cluster_proto_init() }
func file_v2_protobuf_cluster_grakn_cluster_proto_init() {
	if File_v2_protobuf_cluster_grakn_cluster_proto != nil {
		return
	}
	file_v2_protobuf_cluster_cluster_proto_init()
	file_v2_protobuf_cluster_database_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v2_protobuf_cluster_grakn_cluster_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v2_protobuf_cluster_grakn_cluster_proto_goTypes,
		DependencyIndexes: file_v2_protobuf_cluster_grakn_cluster_proto_depIdxs,
	}.Build()
	File_v2_protobuf_cluster_grakn_cluster_proto = out.File
	file_v2_protobuf_cluster_grakn_cluster_proto_rawDesc = nil
	file_v2_protobuf_cluster_grakn_cluster_proto_goTypes = nil
	file_v2_protobuf_cluster_grakn_cluster_proto_depIdxs = nil
}
